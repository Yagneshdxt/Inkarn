@model DataAccess.spa_VM
@{
    ViewBag.Title = "Edit";
}
<h2>Details</h2>

<div class="container">

        @Html.AntiForgeryToken()
        <div class="form-horizontal">
            <hr />
            <div class="form-group">
                @Html.LabelFor(model => model.basic_info.name, "Name", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DisplayFor(model => model.basic_info.name)
                    @Html.ValidationMessageFor(model => model.basic_info.name, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.basic_info.cityId, "City", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DisplayFor(x=>x.basic_info.city.name)
                   
                    @Html.ValidationMessageFor(model => model.basic_info.cityId, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.basic_info.address, "Address", htmlAttributes: new { @class = "control-label col-md-2", placeholder = "Enter your address" })
                <div class="col-md-10">
                    @Html.DisplayFor(model => model.basic_info.address)
                    @Html.ValidationMessageFor(model => model.basic_info.address, "", new { @class = "text-danger" })
                </div>
                @*<input type="text" id="street_number" />
                    <input type="text" id="route" />
                    <input type="text" id="locality" />
                    <input type="text" id="administrative_area_level_1" />
                    <input type="text" id="country" />
                    <input type="text" id="postal_code"/>*@
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.basic_info.zipcode, "ZipCode", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DisplayFor(model => model.basic_info.zipcode)
                    @Html.ValidationMessageFor(model => model.basic_info.zipcode, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.basic_info.info_about, "About", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DisplayFor(x => x.basic_info.info_about)
                    @Html.ValidationMessageFor(model => model.basic_info.info_about, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.basic_info.contact_name, "Contact Name", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DisplayFor(x => x.basic_info.contact_name)
                    @Html.ValidationMessageFor(model => model.basic_info.contact_name, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.basic_info.contact_email, "Contact Email", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DisplayFor(x => x.basic_info.contact_email)
                    @Html.ValidationMessageFor(model => model.basic_info.contact_email, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.basic_info.contact_no, "Contact Number", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DisplayFor(x => x.basic_info.contact_no)
                    @Html.ValidationMessageFor(model => model.basic_info.contact_no, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.categoryLst, "Category List", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <ul class="list-inline" id="categoryList">
                        @for (int i = 0; i < Model.categoryLst.Count(); i++)
                        {
                            <li class="list-inline-item">
                                <label class="checkbox-inline">
                                    @Html.HiddenFor(x => x.categoryLst[i].Id)
                                    @Html.CheckBoxFor(x => x.categoryLst[i].isChecked)
                                    @Html.LabelFor(a => Model.categoryLst[i].name, Model.categoryLst[i].name)
                                </label>
                            </li>
                        }
                    </ul>
                    @Html.ValidationMessageFor(model => model.categoryLst, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.Label("Price List", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10" id="divCatPrice">
                    @{ Html.RenderPartial("subcatePrice", Model); }
                </div>
            </div>
            <div class="form-group">
                @Html.Label("Browse file", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-5">
                    <ul class="list-group">
                        @for (int i = 0; i < Model.images.Count; i++)
                        {
                            <li class="list-group-item">
                                <a class="title" href="/spa/Download/?p=@Model.images[i].image_url&d=file_@i.ToString()"> file_@i.ToString() </a>
                            </li>
                        }
                    </ul>
                </div>
            </div>
            <div class="form-group">
                @Html.Label("Timings", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @for (int i = 0; i < Model.timings.Count; i++)
                    {
                        <div class="row">
                            <div class="col-md-4">
                                @Html.Label(Model.timings[i].week_day, new { @class = "control-label col-md-2" })
                                @Html.HiddenFor(x => x.timings[i].week_day)
                            </div>
                            <div class="col-md-8">
                                @Html.DisplayFor(x => x.timings[i].frm_to_times)
                            </div>
                        </div>
                    }
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.basic_info.contact_no, "is Active", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(x => x.basic_info.is_active)
                    @Html.ValidationMessageFor(model => model.basic_info.is_active, "", new { @class = "text-danger" })
                </div>
            </div>

            @Html.HiddenFor(x => x.basic_info.id)
            <p>
                @Html.ActionLink("Edit", "Edit", new { id = Model.basic_info.id }) |
                @Html.ActionLink("Back to List", "Index")
            </p>
        </div>

    @Html.DisplayForModel()
                        
</div>
@section scripts{
    <script type="text/javascript">
        $(document).ready(function () {
            //Get sub category
            $("input[type='checkbox']").attr("disabled", true);
            $("input[type='text']").attr("disabled", true);
        })
    </script>
    @*<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCJIXNIZ_V67NBD98AB-VU5x5mBGAbREHY&libraries=places&callback=initAutocomplete" async defer></script>*@
}
